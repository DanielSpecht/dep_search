L=olla&!Person=3	Node(SetNode(Token:@CGBASEolla) AND Node(NOT SetNode(Token:@CGTAGPerson=3)))
NOUN&!Nom&!Par	Node(Node(SetNode(Token:@CGTAGNOUN) AND Node(NOT SetNode(Token:@CGTAGNom))) AND Node(NOT SetNode(Token:@CGTAGPar)))
_ >nsubj _ >dobj _	Node(index_node:SetNode(Token:_) << DeprelNode(>nsubj):SetNode(Token:_),DeprelNode(>dobj):SetNode(Token:_) >> )
NOUN >amod@L _ >amod@R _ !>cc _	Node(index_node:SetNode(Token:@CGTAGNOUN) << DeprelNode(>amod@L):SetNode(Token:_),DeprelNode(>amod@R):SetNode(Token:_),DeprelNode(NOT DeprelNode(>cc)):SetNode(Token:_) >> )
_ >amod _ >amod _ >amod _	Node(index_node:SetNode(Token:_) << DeprelNode(>amod):SetNode(Token:_),DeprelNode(>amod):SetNode(Token:_),DeprelNode(>amod):SetNode(Token:_) >> )
VERB&!InfForm=3 >nsubj (NOUN&Par !>nummod _) >dobj _ !<xcomp _ !<xcomp:ds _	Node(index_node:Node(SetNode(Token:@CGTAGVERB) AND Node(NOT SetNode(Token:@CGTAGInfForm=3))) << DeprelNode(>nsubj):Node(index_node:Node(SetNode(Token:@CGTAGNOUN) AND SetNode(Token:@CGTAGPar)) << DeprelNode(NOT DeprelNode(>nummod)):SetNode(Token:_) >> ),DeprelNode(>dobj):SetNode(Token:_),DeprelNode(NOT DeprelNode(<xcomp)):SetNode(Token:_),DeprelNode(NOT DeprelNode(<xcomp:ds)):SetNode(Token:_) >> )
VERB -> (_ <acl:relcl _)	Node(SetNode(Token:@CGTAGVERB) -> Node(index_node:SetNode(Token:_) << DeprelNode(<acl:relcl):SetNode(Token:_) >> ))
_ -> (_ <!@R _) | (_ !< _)	Node(SetNode(Token:_) -> Node(Node(index_node:SetNode(Token:_) << DeprelNode(<!@R):SetNode(Token:_) >> ) OR Node(index_node:SetNode(Token:_) << DeprelNode(NOT DeprelNode(<)):SetNode(Token:_) >> )))
är >nmod _ >nmod _	Node(index_node:SetNode(Token:@CGTAGär) << DeprelNode(>nmod):SetNode(Token:_),DeprelNode(>nmod):SetNode(Token:_) >> )
_ <nsubj|<nsubj:cop _	Node(index_node:SetNode(Token:_) << DeprelNode(DeprelNode(<nsubj) OR DeprelNode(<nsubj:cop)):SetNode(Token:_) >> )
